<?php

require "Slim/Slim.php";
\Slim\Slim::registerAutoloader();

class Service {
    
    public $id = 0;
    public $description = 0;
    
    public function __construct($id, $description) {
        $this->id = $id;
        $this->description = $description;
    }
    
    public function toJSON() {
        return array(
            "id" => $this->id,
            "description" => $this->description, 
            "message" => "SUCCESS"
        );
    }
}


function query($conn, $sql_query) {

    $result =  $conn->query($sql_query);
    if ($result == FALSE) {
        printf("{Error: 'DB Query Failure %s' }\n", $conn->error);
        exit();
    }
    
    return $result;
}

$app = new \Slim\Slim();

$app->get('/(:cid)', function ($sid=-1) use ($app) {
    
    $id = $app->request()->params('id');
    
    include "db.php";
 
    $conn = new mysqli($servername, $username, $password, $dbname);

   if ($conn->connect_errno) {
        printf("DB Connection Failure %s\n", $conn->connect_error);
        exit();
    }

    if ($id != "") {
        $result = query($conn, "SELECT ID, name FROM Services WHERE ID=" . $id);
    } else {
        $result = query($conn, "SELECT ID, name FROM Services");
    }
    
    $services = [];
    
    while ($row = $result->fetch_assoc()) {
        $s = new Service($row['ID'], $row['name']);
        array_push($services, $s->toJSON());
    }    
    
    $app->response['Content-Type'] = 'application/json';
    echo json_encode($services);

    $conn->close();

});


$app->get('/remaining/(:cid)', function ($sid=-1) use ($app) {
    
    $id = $app->request()->params('id');
    
    include "db.php";
 
    $conn = new mysqli($servername, $username, $password, $dbname);

   if ($conn->connect_errno) {
        printf("DB Connection Failure %s\n", $conn->connect_error);
        exit();
    }

    if ($id != "") {
        $result = query($conn, "SELECT ID, name FROM Services WHERE ID=" . $id);
    } else {
        $result = query($conn, "SELECT ID, name FROM Services");
    }
    
    $services = [];
    
    while ($row = $result->fetch_assoc()) {
        $s = new Service($row['ID'], $row['name']);
        array_push($services, $s->toJSON());
    }    
    
    $app->response['Content-Type'] = 'application/json';
    echo json_encode($services);

    $conn->close();

});



//$app->delete('/hello/:id', function($id) {
$app->delete('/:id', function ($id) use ($app) {    

    include "db.php";

    if (ctype_digit((string)$id)) {
        $conn = new mysqli($servername, $username, $password, $dbname);

       if ($conn->connect_errno) {
            printf("DB Connection Failure %s\n", $conn->connect_error);
            exit();
        }

        $conn->autocommit(FALSE);
        
        $conn->query('START TRANSACTION');

        $conn->query("DELETE FROM Services where id=" . $id);
        if ($conn->errno > 0) {
            echo "Error: " + $conn->errno;
            $app->response()->status(402);
            $conn->close();
            return;
        }

        $conn->query('COMMIT');

        if ($conn->errno) {
            $conn->rollBack();
            echo $conn->errno;
            $app->response()->status(402);
        } else {
            $app->response()->status(200);
        }

        $conn->close();
    } else {
        echo "{error: '$id non numeric'}";
        $app->response()->status(500);
    }
});


$app->post('/', function () use ($app) {

    include "db.php";
    
    try {

    $conn = new mysqli($servername, $username, $password, $dbname);
    if ($conn->connect_errno) {
        printf("DB Connection Failure %s\n", $conn->connect_error);
        exit();
    }

    $request = $app->request();
    $body = $request->getBody();
    $input = json_decode($body);

    $service_description = $conn->real_escape_string((string)$input->description);

    if (!$service_description) {
        echo "{error: 'no description provied'}";
        $app->response()->status(400);
    } else {

        try {
            $new_result = query($conn, "INSERT INTO Services (name) 
                                        values 
                                        ('" . $service_description . "')");
        } catch (Exception $e) {
            echo "{error: ' " . $e->getMessage() . " '}";
            $app->response()->status(400);
            return;
        }

        if ($conn->errno) {

            echo "{error: ' " . $conn->errno . " '}";
            $app->response()->status(400);
            
        } else {

            $sid = $conn->insert_id;
            $app->response()->status(200);    
            $app->response['Content-Type'] = 'application/json';

            $s = new Service($sid, $service_description);
            echo json_encode($s->toJSON());
        }
    }    

    } catch (ResourceNotFoundException $e) {
        $app->response()->status(404);
    } catch (Exception $e) {
        $app->response()->status(400);
        $app->response()->header('X-Status-Reason', $e->getMessage());
    }    

    $conn->close();
    
    
});

$app->put('/:id', function ($id) use ($app) {

    include "db.php";
    
    if (!ctype_digit((string)$id)) {
        echo "{error: '$id non numeric'}";
        $app->response()->status(500);
    }

  try {
      
    $conn = new mysqli($servername, $username, $password, $dbname);
    if ($conn->connect_errno) {
        printf("DB Connection Failure %s\n", $conn->connect_error);
        exit();
    }

    $request = $app->request();
    $body = $request->getBody();
    $input = json_decode($body);

    $service_description = $conn->real_escape_string((string)$input->description);

    $result = query($conn, "UPDATE Services SET name='" . $service_description . "' WHERE ID=" . $id);
    
    if ($conn->affected_rows == 1) {
        $app->response()->status(200);
    } else {
        $app->response()->status(500);
    }

    echo "{success: 'modified service '" . $id . "}";

  } catch (ResourceNotFoundException $e) {
    $app->response()->status(404);
  } catch (Exception $e) {
    $app->response()->status(400);
    $app->response()->header('X-Status-Reason', $e->getMessage());
  }    
    
    $conn->close();
    
});

$app->run();

?>
